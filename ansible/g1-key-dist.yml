- hosts: all
  become: yes
  any_errors_fatal: True
  gather_facts: False

  tasks:
    - shell: /bin/bash -c 'echo "Removing existing ansible user SSH keys..." > {{ fifo }}'

    - name: Remove current (unsecure) ssh public key
      file: path=/home/ansible/.ssh/id_rsa.pub state=absent

    - name: Remove current (unsecure) ssh private key
      file: path=/home/ansible/.ssh/id_rsa state=absent

    - shell: /bin/bash -c 'echo "Generating new SSH keys..." > {{ fifo }}'

    - name: Regenerate safe ssh keys for ansible user
      delegate_to: 127.0.0.1
      run_once: true
      user: name=ansible generate_ssh_key=yes
      register: ansible_id_rsa

    - name: Get new SSH private key
      delegate_to: 127.0.0.1
      run_once: true
      set_fact:
        ansible_ssh_private: "{{ lookup('file', '/home/ansible/.ssh/id_rsa') }}"

    - shell: /bin/bash -c 'echo "Distributing new SSH keys..." > {{ fifo }}'

    - name: Install new ansible public key as authorized_key
      authorized_key:
        user: ansible
        state: present
        key: "{{ ansible_id_rsa.ssh_public_key }}"

    - name: Distribute new ansible public key
      copy:
        owner: ansible
        group: ansible
        mode: 0700
        content: "{{ ansible_id_rsa.ssh_public_key }}"
        dest: /home/ansible/.ssh/id_rsa.pub

    - name: Distribute new ansible private key
      copy:
        owner: ansible
        group: ansible
        mode: 0700
        content: "{{ ansible_ssh_private }}"
        dest: /home/ansible/.ssh/id_rsa

    - name: add sudoers configuration for the ansible user
      lineinfile:
        path: /etc/sudoers.d/ansible
        line: "ansible        ALL=(ALL)       NOPASSWD: ALL"
        create: yes
        state: present

    - name: allow non-interactive sudo access
      lineinfile:
        path: /etc/sudoers
        line: "#Defaults requiretty"
        regexp: "^Defaults(.*?)requiretty"
        backrefs: yes
        state: present

    - name: disable DNS lookup in sshd
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "UseDNS no"
        state: present
      notify:
        - reload sshd

  handlers:

      - name: reload sshd
        service: name=sshd state=reloaded
